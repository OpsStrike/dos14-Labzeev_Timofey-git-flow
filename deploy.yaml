- hosts: myhost
  become: true

  tasks:
    - name: Create 'bank' user and add to 'tima1' group
      user:
        name: bank
        groups: tima1
        state: present

    - name: Install ansible package
      apt:
        name: ansible
        state: present

    - name: Create 'ansible' directory in the repository
      file:
        path: /home/bank/ansible
        state: directory

    - name: Install git 2.40.1
      apt:
        name: git
        state: present

    - name: Install pyenv dependencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - make
        - build-essential
        - libssl-dev
        - zlib1g-dev
        - libbz2-dev
        - libreadline-dev
        - libsqlite3-dev
        - wget
        - curl
        - llvm
        - libncurses5-dev
        - xz-utils
        - tk-dev
        - libxml2-dev
        - libxmlsec1-dev
        - libffi-dev
        - liblzma-dev

    - name: Install pyenv
      become_user: bank
      shell: curl https://pyenv.run | bash
      args:
        executable: /bin/bash
        creates: /home/bank/.pyenv

    - name: Add pyenv path to PATH
      lineinfile:
        dest: /home/bank/.bashrc
        line: 'export PATH="/home/bank/.pyenv/bin:$PATH"'
        state: present

    - name: Установка Python 3.11.3 с помощью pyenv
      become_user: bank
      shell: ~/.pyenv/bin/pyenv versions | grep -q 3.11.3 || /home/bank/.pyenv/bin/pyenv install 3.11.3
      args:
        executable: /bin/bash
      changed_when: false

    - name: Проверка установленной глобальной версии Python
      stat:
        path: /home/bank/.pyenv/version
      register: pyenv_global_version

    - name: Установка глобальной версии Python с помощью pyenv
      become_user: bank
      shell: /home/bank/.pyenv/bin/pyenv global 3.11.3
      args:
        executable: /bin/bash
      when: pyenv_global_version.stat.exists == False
      changed_when: false
      tags:
        - always
    
    - name: True Global
      debug:
        msg: "OK"
      when: pyenv_global_version.stat.exists == True
      tags:
        - always

    - name: Install pip
      apt:
        name: python3-pip
        state: present

    - name: Install poetry
      pip:
        name: poetry
        state: present

    - name: Clone repository
      git:
        repo: https://github.com/OpsStrike/dos14-Labzeev_Timofey-git-flow.git
        dest: /home/bank/git
        version: master
        force: yes

    - name: Install project dependencies with poetry
      shell: |
        cd /home/bank/git
        poetry env use /home/bank/.pyenv/versions/3.11.3/bin/python
        poetry lock
        poetry install
      args:
        executable: /bin/bash
      changed_when: false

    - name: Copy app.service.j2 file
      copy:
        src: /home/tima/ansible/templates/app.service.j2
        dest: /etc/systemd/system/flask.service
        owner: root
        group: root
        mode: '0644'

    - name: Configure systemd service
      systemd:
        name: flask.service
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Start systemd service
      systemd:
        name: flask.service
        state: started
