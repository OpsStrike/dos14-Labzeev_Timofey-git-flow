- name: Install Git
  become: true
  apt:
    name: git
    state: present

- name: Install pyenv dependencies
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
    - libncurses5-dev
    - xz-utils
    - tk-dev
    - libxml2-dev
    - libxmlsec1-dev
    - libffi-dev
    - liblzma-dev

- name: Clone the Pyenv repository
  become_user: bank
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: /home/bank/.pyenv
    update: yes

    
- name: Set environment variables for bank user
  become: true
  shell: |
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> /home/bank/.bashrc
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> /home/bank/.bashrc
    echo 'eval "$(pyenv init --path)"' >> /home/bank/.bashrc
  tags:
    - always

- name: Установка Python 3.11.3 с помощью pyenv
  become_user: bank
  shell: |
    source /home/bank/.bashrc
    /home/bank/.pyenv/bin/pyenv versions | grep -q 3.11.3 || /home/bank/.pyenv/bin/pyenv install 3.11.3
  args:
    executable: /bin/bash
  changed_when: false

- name: Проверка установленной глобальной версии Python
  become_user: bank
  stat:
    path: /home/bank/.pyenv/version
  register: pyenv_global_version

- name: Установка глобальной версии Python с помощью pyenv
  become_user: bank
  shell: |
    source /home/bank/.bashrc
    /home/bank/.pyenv/bin/pyenv global 3.11.3
  args:
    executable: /bin/bash
  when: pyenv_global_version.stat.exists == False
  changed_when: false
  tags:
    - always

- name: True Global
  become_user: bank
  debug:
    msg: "OK"
  when: pyenv_global_version.stat.exists == True
  tags:
    - always
